apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: basic-daemonset
  namespace: development
spec:
  mode: daemonset
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.86.0
  serviceAccount: collector
  env:
  - name: KUBE_NODE_NAME
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: spec.nodeName
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317

    processors:
      batch:
        timeout: 1s
      filter/allowlist:
        spans:
          include:
            match_type: strict
            services:
            - axum-otpl
      k8sattributes:
        auth_type: 'serviceAccount'
        passthrough: false
        filter:
          node_from_env_var: KUBE_NODE_NAME
        extract:
          metadata: # extracted from the pod
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.pod.start_time
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.node.name
      resource:
        attributes:
          - key: testslkfjd
            value: 1
            action: insert

    exporters:
      otlp/jaeger:
        endpoint: jaeger:4317
        tls:
          insecure: true

    extensions:
      health_check:
      pprof:
        endpoint: :1888
      zpages:
        endpoint: :55679

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch, filter/allowlist, k8sattributes, resource]
          exporters: [otlp/jaeger]




