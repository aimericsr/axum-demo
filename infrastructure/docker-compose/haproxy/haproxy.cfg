global
  log stdout format raw local0  
  maxconn 5000             

defaults
  mode http
  timeout connect 5s
  timeout client 10s
  timeout server 10s
  timeout http-request 10s
  timeout tunnel 1h
  option http-server-close
  log global

frontend main
  bind 0.0.0.0:443 ssl crt /etc/ssl/my-app.pem

  acl is_host_my_app req.hdr(host) -i my-app
  
  acl is_path_app path_beg /app
  use_backend webservers if is_host_my_app is_path_app

  acl is_path_haproxy path_beg /haproxy
  use_backend haproxy if is_host_my_app is_path_haproxy

  acl is_path_jaeger path_beg /jaeger
  use_backend jaeger if is_host_my_app is_path_jaeger

  acl is_path_grafana path_beg /grafana
  use_backend grafana if is_host_my_app is_path_grafana

  acl is_path_prometheus path_beg /prometheus
  use_backend prometheus if is_host_my_app is_path_prometheus

backend webservers
  http-request replace-path /app(/)?(.*) /\2
  http-request del-header traceparent
  http-request del-header tracestate
  http-request del-header baggage
  option forwarded by for host-expr str(myapp) proto
  server s1 jaeger:8080

backend haproxy_stats
  http-request replace-path /haproxy(/)?(.*) /\2
  stats enable
  stats uri /
  stats refresh 10s

backend jaeger
  http-request replace-path /jaeger(/)?(.*) /\2
  server s1 jaeger:16686

backend grafana
  http-request set-path %[path,regsub(^/grafana/?,/)]
  server s1 grafana:3000

backend prometheus
  server s1 prometheus:9090
  

# ssh-keygen -R 128.140.71.58
# ssh root@128.140.71.58    

# brew install certbot
# apt install -y certbot 

# ss -a
# $ lsof -n -i
# ps
# df/du
# ip a
# mkdir -p /etc/ssl/private
# sudo certbot certonly --standalone --noninteractive --agree-tos  -m me@gmail.com -d yourdomain.com
# cat /etc/letsencrypt/live/yourdomain.com/fullchain.pem /etc/letsencrypt/live/yourdomain.com/privkey.pem > /etc/ssl/private/yourdomain.com.pem
