global
  # stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  log stdout format raw local0 info

defaults
  mode http
  timeout client 10s
  timeout connect 5s
  timeout server 10s
  timeout http-request 10s
  log global

# frontend stats
#   bind *:8404
#   stats enable
#   stats uri /
#   stats refresh 10s

frontend http_front
  bind *:80
  redirect scheme https code 301

frontend https_front
  bind *:443 ssl crt /etc/ssl/localhost.pem
  default_backend webservers

backend webservers
  server s1 web:8080 check


# Install certs

# openssl req -x509 -out localhost.crt -keyout localhost.key \
#   -newkey rsa:2048 -nodes -sha256 \
#   -subj '/CN=localhost' -extensions EXT -config <( \
#    printf "[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth")

# curl -v --cacert localhost.crt -L https://localhost/health http://localhost/health

# cat localhost.crt localhost.key > localhost.pem





# brew install certbot
# apt install -y certbot 

# mkdir -p /etc/ssl/private
# sudo certbot certonly --standalone --noninteractive --agree-tos  -m me@gmail.com -d yourdomain.com
# cat /etc/letsencrypt/live/yourdomain.com/fullchain.pem /etc/letsencrypt/live/yourdomain.com/privkey.pem > /etc/ssl/private/yourdomain.com.pem
